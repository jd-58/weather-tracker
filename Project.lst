Microsoft (R) Macro Assembler Version 14.41.34120.0	    11/05/24 15:53:13
0Program Weather Tracker     (Proj3_deatonja.asm	     Page 1 - 1


				TITLE Program Weather Tracker     (Proj3_deatonja.asm)

				; Author: Jacob Deaton
				; A weather tracker that calculates weather information based on temperature readings (in Celsius)
				; that the user provides. Information includes minimum, maximum, and average temperatures.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				; (insert macro definitions here)

				; Constants
 =-0000001E			minTemp			= -30
 =-00000001			maxColdTemp		= -1
 = 00000000			minCoolTemp		= 0
 = 0000000F			maxCoolTemp		= 15
 = 00000010			minWarmTemp		= 16
 = 0000001E			maxWarmTemp		= 30
 = 0000001F			minHotTemp		= 31
 = 00000032			maxTemp			= 50


 00000000			.data

 00000000 57 65 6C 63 6F	intro					BYTE	"Welcome to the Temperature Tool by Jacob Deaton",0
	   6D 65 20 74 6F
	   20 74 68 65 20
	   54 65 6D 70 65
	   72 61 74 75 72
	   65 20 54 6F 6F
	   6C 20 62 79 20
	   4A 61 63 6F 62
	   20 44 65 61 74
	   6F 6E 00
 00000030 48 6F 77 20 6D	numOfReadingsPrompt		BYTE	"How many temperature readings would you like to enter? (Must be greater than 0): ",0
	   61 6E 79 20 74
	   65 6D 70 65 72
	   61 74 75 72 65
	   20 72 65 61 64
	   69 6E 67 73 20
	   77 6F 75 6C 64
	   20 79 6F 75 20
	   6C 69 6B 65 20
	   74 6F 20 65 6E
	   74 65 72 3F 20
	   28 4D 75 73 74
	   20 62 65 20 67
	   72 65 61 74 65
	   72 20 74 68 61
	   6E 20 30 29 3A
	   20 00
 00000082 54 6F 20 73 74	instructions1			BYTE	"To start, enter daily temperature readings, in celsius, in the specified range. ",0
	   61 72 74 2C 20
	   65 6E 74 65 72
	   20 64 61 69 6C
	   79 20 74 65 6D
	   70 65 72 61 74
	   75 72 65 20 72
	   65 61 64 69 6E
	   67 73 2C 20 69
	   6E 20 63 65 6C
	   73 69 75 73 2C
	   20 69 6E 20 74
	   68 65 20 73 70
	   65 63 69 66 69
	   65 64 20 72 61
	   6E 67 65 2E 20
	   00
 000000D3 54 68 65 20 70	instructions2			BYTE	"The program will display statistics of the input values including the minimum, maximum, and average values, ",0
	   72 6F 67 72 61
	   6D 20 77 69 6C
	   6C 20 64 69 73
	   70 6C 61 79 20
	   73 74 61 74 69
	   73 74 69 63 73
	   20 6F 66 20 74
	   68 65 20 69 6E
	   70 75 74 20 76
	   61 6C 75 65 73
	   20 69 6E 63 6C
	   75 64 69 6E 67
	   20 74 68 65 20
	   6D 69 6E 69 6D
	   75 6D 2C 20 6D
	   61 78 69 6D 75
	   6D 2C 20 61 6E
	   64 20 61 76 65
	   72 61 67 65 20
	   76 61 6C 75 65
	   73 2C 20 00
 00000140 61 6E 64 20 70	instructions3			BYTE	"and provide a count of Cold (Less than 0 C), Cool (0-15 C), Warm (16-30 C), and Hot (more than 30 C) days.",0
	   72 6F 76 69 64
	   65 20 61 20 63
	   6F 75 6E 74 20
	   6F 66 20 43 6F
	   6C 64 20 28 4C
	   65 73 73 20 74
	   68 61 6E 20 30
	   20 43 29 2C 20
	   43 6F 6F 6C 20
	   28 30 2D 31 35
	   20 43 29 2C 20
	   57 61 72 6D 20
	   28 31 36 2D 33
	   30 20 43 29 2C
	   20 61 6E 64 20
	   48 6F 74 20 28
	   6D 6F 72 65 20
	   74 68 61 6E 20
	   33 30 20 43 29
	   20 64 61 79 73
	   2E 00
 000001AB 57 68 61 74 20	namePrompt				BYTE	"What is your name? ",0
	   69 73 20 79 6F
	   75 72 20 6E 61
	   6D 65 3F 20 00
 000001BF 48 65 6C 6C 6F	nameDisplay				BYTE	"Hello there, ",0
	   20 74 68 65 72
	   65 2C 20 00
 000001CD 50 6C 65 61 73	tempPrompt1				BYTE	"Please enter ",0
	   65 20 65 6E 74
	   65 72 20 00
 000001DB 20 74 65 6D 70	tempPrompt2				BYTE	" temperature readings in the range [-30, 50] Celsius.",0
	   65 72 61 74 75
	   72 65 20 72 65
	   61 64 69 6E 67
	   73 20 69 6E 20
	   74 68 65 20 72
	   61 6E 67 65 20
	   5B 2D 33 30 2C
	   20 35 30 5D 20
	   43 65 6C 73 69
	   75 73 2E 00
 00000211 4E 6F 2E 2E 2E	invalidCold				BYTE	"No... too cold! That can't be right! (Invalid Input)",0
	   20 74 6F 6F 20
	   63 6F 6C 64 21
	   20 54 68 61 74
	   20 63 61 6E 27
	   74 20 62 65 20
	   72 69 67 68 74
	   21 20 28 49 6E
	   76 61 6C 69 64
	   20 49 6E 70 75
	   74 29 00
 00000246 59 69 6B 65 73	invalidHot				BYTE	"Yikes! That's way too hot! (Invalid Input)",0
	   21 20 54 68 61
	   74 27 73 20 77
	   61 79 20 74 6F
	   6F 20 68 6F 74
	   21 20 28 49 6E
	   76 61 6C 69 64
	   20 49 6E 70 75
	   74 29 00
 00000271 44 61 69 6C 79	dailyTemp				BYTE	"Daily Temperature: ",0
	   20 54 65 6D 70
	   65 72 61 74 75
	   72 65 3A 20 00
 00000285 54 68 61 6E 6B	thanksPrompt			BYTE	"Thanks! Lets work some stats:",0
	   73 21 20 4C 65
	   74 73 20 77 6F
	   72 6B 20 73 6F
	   6D 65 20 73 74
	   61 74 73 3A 00
 000002A3 54 68 65 20 6D	maxTempPrompt			BYTE	"The maximum valid temp reading was ",0
	   61 78 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 74 65
	   6D 70 20 72 65
	   61 64 69 6E 67
	   20 77 61 73 20
	   00
 000002C7 20 64 65 67 72	degCelsius				BYTE	" degrees Celsius.",0
	   65 65 73 20 43
	   65 6C 73 69 75
	   73 2E 00
 000002D9 54 68 65 20 6D	minTempPrompt			BYTE	"The minimum valid temp reading was ",0
	   69 6E 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 74 65
	   6D 70 20 72 65
	   61 64 69 6E 67
	   20 77 61 73 20
	   00
 000002FD 54 68 65 20 61	avgTempIntPrompt		BYTE	"The average integer temperature reading was ",0
	   76 65 72 61 67
	   65 20 69 6E 74
	   65 67 65 72 20
	   74 65 6D 70 65
	   72 61 74 75 72
	   65 20 72 65 61
	   64 69 6E 67 20
	   77 61 73 20 00
 0000032A 54 68 65 20 61	avgTempDecimalPrompt	BYTE	"The average temperature reading rounded to 2 decimal places was ",0
	   76 65 72 61 67
	   65 20 74 65 6D
	   70 65 72 61 74
	   75 72 65 20 72
	   65 61 64 69 6E
	   67 20 72 6F 75
	   6E 64 65 64 20
	   74 6F 20 32 20
	   64 65 63 69 6D
	   61 6C 20 70 6C
	   61 63 65 73 20
	   77 61 73 20 00
 0000036B 2E 00			decimal					BYTE	".",0
 0000036D 4E 75 6D 62 65	coldPrompt				BYTE	"Number of Cold days: ",0
	   72 20 6F 66 20
	   43 6F 6C 64 20
	   64 61 79 73 3A
	   20 00
 00000383 4E 75 6D 62 65	coolPrompt				BYTE	"Number of Cool days: ",0
	   72 20 6F 66 20
	   43 6F 6F 6C 20
	   64 61 79 73 3A
	   20 00
 00000399 4E 75 6D 62 65	warmPrompt				BYTE	"Number of Warm days: ",0
	   72 20 6F 66 20
	   57 61 72 6D 20
	   64 61 79 73 3A
	   20 00
 000003AF 4E 75 6D 62 65	hotPrompt				BYTE	"Number of  Hot days: ",0
	   72 20 6F 66 20
	   20 48 6F 74 20
	   64 61 79 73 3A
	   20 00
 000003C5 46 61 72 65 77	farewell				BYTE	"Farewell, ",0
	   65 6C 6C 2C 20
	   00
 000003D0  0000001F [		username				BYTE	31	DUP(0)	; Username be entered by the user
	    00
	   ]
 000003EF 00000000		usernameByteCount		DWORD	?			; Holds counter for username size
 000003F3 00000000		numColdDays				DWORD	0			; To be calculated, number of cold days
 000003F7 00000000		tempReadingDiv2			DWORD	?			; To be calculated, the number of temp readings divided by 2 to determine whether to round up or down
 000003FB 00000000		tempReadingDiv2Rem		SDWORD	?			; To be calculated, the remainder for the number of temp readings divided by 2	
 000003FF 00000000		numCoolDays				DWORD	0			; To be calculated, number of cool days
 00000403 00000000		numWarmDays				DWORD	0			; To be calculated, number of warm days
 00000407 00000000		numHotDays				DWORD	0			; To be calculated, number of hot days
 0000040B 00000000		userTemp				SDWORD	?			; To be calculated, the most recent user temperature reading
 0000040F 00000000		avgTempInt				SDWORD	0			; To be calculated, the average (integer) temperature
 00000413 00000000		avgTempIntRound			SDWORD	?			; To be calculated, average integer temperature if it needs to be rounded up
 00000417 00000000		avgTempRemainder		DWORD	0			; To be calcualted, the remainder of integer division of average temperature
 0000041B 00000000		avgTempDecimal			DWORD	?			; To be calculated, the decimal portion of the avg temp
 0000041F 00000000		lowestTemp				SDWORD	?			; To be calculated, the lowest of the user temperature readings
 00000423 00000000		highestTemp				SDWORD	?			; To be calcualted, the highest of the user temperature readings
 00000427 00000000		loopCounter				DWORD	0			; Sets the loop counter at zero
 0000042B 00000000		numOfTempReadings		DWORD	?			; To be entered by the user, the number of temperature readings they would like to enter.


 00000000			.code
 00000000			main PROC

				; --------------------------
				; Displays a welcome message, including the programmer name. 
				; Asks user how many temperature readings they want to enter, and saves that to a variable.
				; Instructions for the user to enter temperatures, and an explanation of the 
				; temperature catagories is displayed.
				; --------------------------
					; Welcome message
 00000000  BA 00000000 R		MOV		EDX, OFFSET intro
 00000005  E8 00000000 E		CALL	WriteString
 0000000A  E8 00000000 E		CALL	CrLf
 0000000F  E8 00000000 E		CALL	CrLf				; Having a blank line between the welcome message and the instructions

					; Display instructions
 00000014  BA 00000082 R		MOV		EDX, OFFSET instructions1
 00000019  E8 00000000 E		CALL	WriteString
 0000001E  E8 00000000 E		CALL	CrLf
 00000023  BA 000000D3 R		MOV		EDX, OFFSET instructions2
 00000028  E8 00000000 E		CALL	WriteString
 0000002D  E8 00000000 E		CALL	CrLf
 00000032  BA 00000140 R		MOV		EDX, OFFSET instructions3
 00000037  E8 00000000 E		CALL	WriteString
 0000003C  E8 00000000 E		CALL	CrLf


				; --------------------------
				; Asks the user their name, gets the user input, stores it in a variable
				; and then greets the user using their name. 
				; For EC: Asks user how many temperatures they want to enter, and saves that number as a variable.
				; --------------------------
					; Ask user their name
 00000041  BA 000001AB R		MOV		EDX, OFFSET namePrompt
 00000046  E8 00000000 E		CALL	WriteString

					; Read user input
 0000004B  BA 000003D0 R		MOV		EDX, OFFSET username
 00000050  B9 00000020			MOV		ECX, 32
 00000055  E8 00000000 E		CALL	ReadString					; Preconditions of ReadString: (1) Max length saved in ECX, (2) EDX holds ptr to string

					; Greet user with their name
 0000005A  BA 000001BF R		MOV		EDX, OFFSET nameDisplay
 0000005F  E8 00000000 E		CALL	WriteString
 00000064  BA 000003D0 R		MOV		EDX, OFFSET username
 00000069  E8 00000000 E		CALL	WriteString
 0000006E  E8 00000000 E		CALL	CrLf

					; Prompt: How many temps does user want to enter
 00000073  BA 00000030 R		MOV		EDX, OFFSET numOfReadingsPrompt
 00000078  E8 00000000 E		CALL	WriteString
 0000007D  E8 00000000 E		CALL	ReadInt					; Postconditions of ReadInt: Value is saved in EAX
 00000082  A3 0000042B R		MOV		numOfTempReadings, EAX
 00000087  E8 00000000 E		CALL	CrLf
 0000008C  E8 00000000 E		CALL	CrLf

				; --------------------------
				; Prompts the user to enter temperature readings in the correct range.
				; Reads the user input, stores it in a variable, and loops the determined number of times.
				; Adds the user temperature to the running total (to determine the average).
				; Checks if this value is lower than the previous lowest value, or higher than the previous highest value. Updates the min and max if needed.
				; Will give an error if a temperature is too hot or too cold, and prompt the user to enter a new temperature. 
				; --------------------------
					; Prompt the user to enter temperature readings
 00000091  BA 000001CD R		MOV		EDX, OFFSET tempPrompt1
 00000096  E8 00000000 E		CALL	WriteString
 0000009B  A1 0000042B R		MOV		EAX, numOfTempReadings
 000000A0  E8 00000000 E		CALL	WriteDec
 000000A5  BA 000001DB R		MOV		EDX, OFFSET tempPrompt2
 000000AA  E8 00000000 E		CALL	WriteString
 000000AF  E8 00000000 E		CALL	CrLf


					; Checks if the loop is finished. If not, reads user temperature readings.
 000000B4				_tempLoopStart:						; Start the loop here
 000000B4  8B 15 00000427 R		MOV		EDX, loopCounter
 000000BA  3B 15 0000042B R		CMP		EDX, numOfTempReadings
 000000C0  0F 8D 0000012E		JGE		_tempCalculations
 000000C6  BA 00000271 R		MOV		EDX, OFFSET dailyTemp
 000000CB  E8 00000000 E		CALL	WriteString
 000000D0  E8 00000000 E		CALL	ReadInt					; Postconditions of ReadInt: Value is saved in EAX
 000000D5  A3 0000040B R		MOV		userTemp, EAX
					
					; Checks if user temperature is in the correct range
 000000DA  8B 15 0000040B R		MOV		EDX, userTemp
 000000E0  83 FA E2			CMP		EDX, minTemp
 000000E3  0F 8C 000000F2		JL		_tooCold
 000000E9  8B 15 0000040B R		MOV		EDX, userTemp
 000000EF  83 FA 32			CMP		EDX, maxTemp	
 000000F2  0F 8F 000000CA		JG		_tooHot

					; Determines whether the user temperature was a cold, cool, warm, or hot day
 000000F8  8B 15 0000040B R		MOV		EDX, userTemp
 000000FE  83 FA FF			CMP		EDX, maxColdTemp
 00000101  7E 18			JLE		_coldDay
 00000103  8B 15 0000040B R		MOV		EDX, userTemp
 00000109  83 FA 0F			CMP		EDX, maxCoolTemp
 0000010C  7E 15			JLE		_coolDay
 0000010E  8B 15 0000040B R		MOV		EDX, userTemp
 00000114  83 FA 1E			CMP		EDX, maxWarmTemp
 00000117  7E 12			JLE		_warmDay
 00000119  EB 18			JMP		_hotDay

 0000011B				_coldDay:
 0000011B  FF 05 000003F3 R		INC		numColdDays
 00000121  EB 18			JMP		_validTemp

 00000123				_coolDay:
 00000123  FF 05 000003FF R		INC		numCoolDays
 00000129  EB 10			JMP		_validTemp

 0000012B				_warmDay:
 0000012B  FF 05 00000403 R		INC		numWarmDays
 00000131  EB 08			JMP		_validTemp

 00000133				_hotDay:
 00000133  FF 05 00000407 R		INC		numHotDays
 00000139  EB 00			JMP		_validTemp

					;  Adds valid user temp to running total, checks if it is the first valid temp
 0000013B				_validTemp:
 0000013B  8B 15 0000040B R		MOV		EDX, userTemp
 00000141  01 15 0000040F R		ADD		avgTempInt, EDX
 00000147  83 3D 00000427 R		CMP		loopCounter, 0			; Checks if it is the first valid user temp
	   00
 0000014E  74 27			JZ		_firstValidTemp

					; Checks if this is a new lowest or highest entered temp. If not, increments loop and jumps to start
 00000150  8B 15 0000040B R		MOV		EDX, userTemp
 00000156  3B 15 0000041F R		CMP		EDX, lowestTemp
 0000015C  7C 36			JL		_newLowestTemp
 0000015E  8B 15 0000040B R		MOV		EDX, userTemp
 00000164  3B 15 00000423 R		CMP		EDX, highestTemp
 0000016A  7F 3F			JG		_newHighestTemp
 0000016C  FF 05 00000427 R		INC		loopCounter
 00000172  E9 FFFFFF3D			JMP		_tempLoopStart
					


					; Updates highest temperature, increments and goes back to start
					; of loop if the user needs to enter more temperatures
 00000177				_firstValidTemp:				
 00000177  8B 15 0000040B R		MOV		EDX, userTemp
 0000017D  89 15 0000041F R		MOV		lowestTemp, EDX
 00000183  89 15 00000423 R		MOV		highestTemp, EDX
 00000189  FF 05 00000427 R		INC		loopCounter
 0000018F  E9 FFFFFF20			JMP		_tempLoopStart


					; Updates the lowest entered temperature, increments loop, and goes back to start of loop if user
					; needs to enter more loops
 00000194				_newLowestTemp:				
 00000194  8B 15 0000040B R		MOV		EDX, userTemp		
 0000019A  89 15 0000041F R		MOV		lowestTemp, EDX
 000001A0  FF 05 00000427 R		INC		loopCounter
 000001A6  E9 FFFFFF09			JMP		_tempLoopstart

 000001AB				_newHighestTemp:
 000001AB  8B 15 0000040B R		MOV		EDX, userTemp		
 000001B1  89 15 00000423 R		MOV		highestTemp, EDX
 000001B7  FF 05 00000427 R		INC		loopCounter
 000001BD  E9 FFFFFEF2			JMP		_tempLoopstart


					; Displays the error if the user enters a temperature above the range
 000001C2				_tooHot:
 000001C2  E8 00000000 E		CALL	CrLf
 000001C7  BA 00000246 R		MOV		EDX, OFFSET invalidHot
 000001CC  E8 00000000 E		CALL	WriteString
 000001D1  E8 00000000 E		CALL	CrLf
 000001D6  E9 FFFFFED9			JMP		_tempLoopStart

					; Displays an error if the user enteres a temperature below the range
 000001DB				_tooCold:
 000001DB  E8 00000000 E		CALL	CrLf
 000001E0  BA 00000211 R		MOV		EDX, OFFSET invalidCold
 000001E5  E8 00000000 E		CALL	WriteString
 000001EA  E8 00000000 E		CALL	CrLf
 000001EF  E9 FFFFFEC0			JMP		_tempLoopStart


				; --------------------------
				; Displays the min and max temperatures.
				; --------------------------
					; Display max temp
 000001F4				_tempCalculations:
 000001F4  E8 00000000 E		CALL	CrLf
 000001F9  BA 00000285 R		MOV		EDX, OFFSET thanksPrompt
 000001FE  E8 00000000 E		CALL	WriteString
 00000203  E8 00000000 E		CALL	CrLf
 00000208  BA 000002A3 R		MOV		EDX, OFFSET maxTempPrompt
 0000020D  E8 00000000 E		CALL	WriteString
 00000212  A1 00000423 R		MOV		EAX, highestTemp
 00000217  E8 00000000 E		CALL	WriteInt
 0000021C  BA 000002C7 R		MOV		EDX, OFFSET degCelsius
 00000221  E8 00000000 E		CALL	WriteString

					; Display min temp
 00000226  E8 00000000 E		CALL	CrLf
 0000022B  BA 000002D9 R		MOV		EDX, OFFSET minTempPrompt
 00000230  E8 00000000 E		CALL	WriteString
 00000235  A1 0000041F R		MOV		EAX, lowestTemp
 0000023A  E8 00000000 E		CALL	WriteInt
 0000023F  BA 000002C7 R		MOV		EDX, OFFSET degCelsius
 00000244  E8 00000000 E		CALL	WriteString
 00000249  E8 00000000 E		CALL	CrLf

				; --------------------------
				; Calculates the average temperature rounded to the nearest integer.
				; Calculates whether to round up or down, by dividing the remainder by the number of temp readings.
				; Checks if remainder is greater than half of the number of temp readings. 
				; If so, rounds up or down depending on positive or negative number.
				; Displays the average temp.
				; --------------------------


					; Divide sum of all temp readings by number of temp readings
 0000024E  A1 0000040F R		MOV		EAX, avgTempInt	; Moving to EAX for IDIV
 00000253  BA 00000000			MOV		EDX, 0				; IDIV preconditions: EDX must be cleared
 00000258  99				CDQ							; Sign extending EAX into EDX
 00000259  8B 0D 0000042B R		MOV		ECX, numOfTempReadings
 0000025F  F7 F9			IDIV	ECX
 00000261  A3 0000040F R		MOV		avgTempInt, EAX
 00000266  89 15 00000417 R		MOV		avgTempRemainder, EDX		; Remainder stored in EDX, moved to variable

					; If remainder is negative, mul by -1 to make it positive
 0000026C  83 3D 00000417 R		CMP		avgTempRemainder, 0
	   00
 00000273  7D 11			JGE		_numTempReadingDiv
 00000275  A1 00000417 R		MOV		EAX, avgTempRemainder
 0000027A  BB FFFFFFFF			MOV		EBX, -1
 0000027F  F7 EB			IMUL	EBX					; Result stored in EAX
 00000281  A3 00000417 R		MOV		avgTempRemainder, EAX


					; Divides number of temp readings by 2
 00000286				_numTempReadingDiv:
 00000286  A1 0000042B R		MOV		EAX, numOfTempReadings
 0000028B  BA 00000000			MOV		EDX, 0
 00000290  99				CDQ
 00000291  B9 00000002			MOV		ECX, 2
 00000296  F7 F9			IDIV	ECX
 00000298  A3 000003F7 R		MOV		tempReadingDiv2, EAX
 0000029D  89 15 000003FB R		MOV		tempReadingDiv2Rem, EDX		; Remainder stored in EDX, moved to variable

					; Compare the temp reading divided by 2 to the integer divide remainder. 
 000002A3  8B 15 00000417 R		MOV		EDX, avgTempRemainder
 000002A9  3B 15 000003F7 R		CMP		EDX, tempReadingDiv2
 000002AF  7C 57			JL		_avgTempDisplayNoRound			; If remainder is less than half of num of temps / 2, no rounding needed.
 000002B1  74 02			JE		_avgTempRemainderCheck			; If the integers are equal in the division, rounding might be needed. Check remainders to ensure which number is larger. 
 000002B3  EB 0B			JMP		_avgTempRound					; If integer is larger, then rounding is definitely needed.

					; Compare remainder of number of temp readings / 2 to see if the temp reading divided by 2 is larger or smaller than integer divide remainder.
					; If there is a remainder to the number of temp readings / 2, the number needs to be rounded.
 000002B5				_avgTempRemainderCheck:
 000002B5  83 3D 000003FB R		CMP		tempReadingDiv2Rem, 0
	   00
 000002BC  74 02			JE		_avgTempRound				; Number of temp readings / 2 has a remainder, and is larger than remainder of avg temp. Rounding needed.
 000002BE  EB 48			JMP		_avgTempDisplayNoRound



					; Temp needs to be rounded. If avg temp is positive, round up. If not, round down.
 000002C0				_avgTempRound:
 000002C0  8B 15 0000040F R		MOV		EDX, avgTempInt
 000002C6  89 15 00000413 R		MOV		avgTempIntRound, EDX
 000002CC  83 3D 0000040F R		CMP		avgTempInt, 0
	   00
 000002D3  7C 08			JL		_negativeNumRoundDown
 000002D5  FF 05 00000413 R		INC		avgTempIntRound
 000002DB  EB 06			JMP		_avgTempDisplayRounded
 000002DD				_negativeNumRoundDown:
 000002DD  FF 0D 00000413 R		DEC		avgTempIntRound

					; Displays the rounded up integer
 000002E3				_avgTempDisplayRounded:
 000002E3  BA 000002FD R		MOV		EDX, OFFSET avgTempIntPrompt
 000002E8  E8 00000000 E		CALL	WriteString
 000002ED  A1 00000413 R		MOV		EAX, avgTempIntRound
 000002F2  E8 00000000 E		CALL	WriteInt				
 000002F7  BA 000002C7 R		MOV		EDX, OFFSET degCelsius
 000002FC  E8 00000000 E		CALL	WriteString
 00000301  E8 00000000 E		CALL	CrLf
 00000306  EB 29			JMP		_avgTempDecimal


					; Displays avg integer temp
 00000308				_avgTempDisplayNoRound:
 00000308  8B 15 00000417 R		MOV		EDX, avgTempRemainder
 0000030E  BA 000002FD R		MOV		EDX, OFFSET avgTempIntPrompt
 00000313  E8 00000000 E		CALL	WriteString
 00000318  A1 0000040F R		MOV		EAX, avgTempInt
 0000031D  E8 00000000 E		CALL	WriteInt				
 00000322  BA 000002C7 R		MOV		EDX, OFFSET degCelsius
 00000327  E8 00000000 E		CALL	WriteString
 0000032C  E8 00000000 E		CALL	CrLf

				; --------------------------
				; Calculates the average temperature rounded to 2 decimal points.
				; Multiply remainder by 100, divide this number by the number of temp readings. This will be the decimal.
				; Ex: 35/4 = 8.75 or 8 r 3. multiply 3 by 100, and divide by 4 to get 75, for 8.75
				; Displays the average temp rounded to 2 decimal points.
				; --------------------------

					; Multiply remainder by 100, divide by the number of temp readings
 00000331				_avgTempDecimal:
 00000331  A1 00000417 R		MOV		EAX, avgTempRemainder
 00000336  BB 00000064			MOV		EBX, 100
 0000033B  F7 E3			MUL		EBX					; Result stored in EAX
 0000033D  BA 00000000			MOV		EDX, 0				; IDIV preconditions: EDX must be cleared
 00000342  99				CDQ							; Sign extending EAX into EDX
 00000343  8B 0D 0000042B R		MOV		ECX, numOfTempReadings
 00000349  F7 F1			DIV		ECX
 0000034B  A3 0000041B R		MOV		avgTempDecimal, EAX 

					; Display the average temperature rounded to 2 decimal points
 00000350  BA 0000032A R		MOV		EDX, OFFSET avgTempDecimalPrompt
 00000355  E8 00000000 E		CALL	WriteString
 0000035A  A1 0000040F R		MOV		EAX, avgTempInt
 0000035F  E8 00000000 E		CALL	WriteInt
 00000364  BA 0000036B R		MOV		EDX, OFFSET	decimal
 00000369  E8 00000000 E		CALL	WriteString
 0000036E  A1 0000041B R		MOV		EAX, avgTempDecimal
 00000373  E8 00000000 E		CALL	WriteDec
 00000378  E8 00000000 E		CALL	CrLf
					

				; --------------------------
				; Displays number of cold, cool, warm, and hot days. 
				; Displays farewell and ends program.
				; --------------------------

					; Display number of cold days
 0000037D  BA 0000036D R		MOV		EDX, OFFSET coldPrompt
 00000382  E8 00000000 E		CALL	WriteString
 00000387  A1 000003F3 R		MOV		EAX, numColdDays
 0000038C  E8 00000000 E		CALL	WriteDec
 00000391  E8 00000000 E		CALL	CrLf

					; Display number of cool days
 00000396  BA 00000383 R		MOV		EDX, OFFSET coolPrompt
 0000039B  E8 00000000 E		CALL	WriteString
 000003A0  A1 000003FF R		MOV		EAX, numCoolDays
 000003A5  E8 00000000 E		CALL	WriteDec
 000003AA  E8 00000000 E		CALL	CrLf

					; Display number of warm days
 000003AF  BA 00000399 R		MOV		EDX, OFFSET warmPrompt
 000003B4  E8 00000000 E		CALL	WriteString
 000003B9  A1 00000403 R		MOV		EAX, numWarmDays
 000003BE  E8 00000000 E		CALL	WriteDec
 000003C3  E8 00000000 E		CALL	CrLf

					; Display number of hot days
 000003C8  BA 000003AF R		MOV		EDX, OFFSET hotPrompt
 000003CD  E8 00000000 E		CALL	WriteString
 000003D2  A1 00000407 R		MOV		EAX, numHotDays
 000003D7  E8 00000000 E		CALL	WriteDec
 000003DC  E8 00000000 E		CALL	CrLf
 000003E1  E8 00000000 E		CALL	CrLf
					
					; Display farewell
 000003E6  BA 000003C5 R		MOV		EDX, OFFSET farewell
 000003EB  E8 00000000 E		CALL	WriteString
 000003F0  BA 000003D0 R		MOV		EDX, OFFSET username
 000003F5  E8 00000000 E		CALL	WriteString
 000003FA  E8 00000000 E		CALL	CrLf



					Invoke ExitProcess,0	; exit to operating system
 000003FF  6A 00	   *	    push   +000000000h
 00000401  E8 00000000 E   *	    call   ExitProcess
 00000406			main ENDP

				; (insert additional procedures here)

				END main
Microsoft (R) Macro Assembler Version 14.41.34120.0	    11/05/24 15:53:13
0Program Weather Tracker     (Proj3_deatonja.asm	     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000042F Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000406 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000406 Public STDCALL
  _tempLoopStart . . . . . . . .	L Near	 000000B4 _TEXT	
  _coldDay . . . . . . . . . . .	L Near	 0000011B _TEXT	
  _coolDay . . . . . . . . . . .	L Near	 00000123 _TEXT	
  _warmDay . . . . . . . . . . .	L Near	 0000012B _TEXT	
  _hotDay  . . . . . . . . . . .	L Near	 00000133 _TEXT	
  _validTemp . . . . . . . . . .	L Near	 0000013B _TEXT	
  _firstValidTemp  . . . . . . .	L Near	 00000177 _TEXT	
  _newLowestTemp . . . . . . . .	L Near	 00000194 _TEXT	
  _newHighestTemp  . . . . . . .	L Near	 000001AB _TEXT	
  _tooHot  . . . . . . . . . . .	L Near	 000001C2 _TEXT	
  _tooCold . . . . . . . . . . .	L Near	 000001DB _TEXT	
  _tempCalculations  . . . . . .	L Near	 000001F4 _TEXT	
  _numTempReadingDiv . . . . . .	L Near	 00000286 _TEXT	
  _avgTempRemainderCheck . . . .	L Near	 000002B5 _TEXT	
  _avgTempRound  . . . . . . . .	L Near	 000002C0 _TEXT	
  _negativeNumRoundDown  . . . .	L Near	 000002DD _TEXT	
  _avgTempDisplayRounded . . . .	L Near	 000002E3 _TEXT	
  _avgTempDisplayNoRound . . . .	L Near	 00000308 _TEXT	
  _avgTempDecimal  . . . . . . .	L Near	 00000331 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
avgTempDecimalPrompt . . . . . .	Byte	 0000032A _DATA	
avgTempDecimal . . . . . . . . .	DWord	 0000041B _DATA	
avgTempIntPrompt . . . . . . . .	Byte	 000002FD _DATA	
avgTempIntRound  . . . . . . . .	DWord	 00000413 _DATA	
avgTempInt . . . . . . . . . . .	DWord	 0000040F _DATA	
avgTempRemainder . . . . . . . .	DWord	 00000417 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
coldPrompt . . . . . . . . . . .	Byte	 0000036D _DATA	
coolPrompt . . . . . . . . . . .	Byte	 00000383 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
dailyTemp  . . . . . . . . . . .	Byte	 00000271 _DATA	
decimal  . . . . . . . . . . . .	Byte	 0000036B _DATA	
degCelsius . . . . . . . . . . .	Byte	 000002C7 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
farewell . . . . . . . . . . . .	Byte	 000003C5 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
highestTemp  . . . . . . . . . .	DWord	 00000423 _DATA	
hotPrompt  . . . . . . . . . . .	Byte	 000003AF _DATA	
instructions1  . . . . . . . . .	Byte	 00000082 _DATA	
instructions2  . . . . . . . . .	Byte	 000000D3 _DATA	
instructions3  . . . . . . . . .	Byte	 00000140 _DATA	
intro  . . . . . . . . . . . . .	Byte	 00000000 _DATA	
invalidCold  . . . . . . . . . .	Byte	 00000211 _DATA	
invalidHot . . . . . . . . . . .	Byte	 00000246 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
loopCounter  . . . . . . . . . .	DWord	 00000427 _DATA	
lowestTemp . . . . . . . . . . .	DWord	 0000041F _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
maxColdTemp  . . . . . . . . . .	Number	 -00000001h   
maxCoolTemp  . . . . . . . . . .	Number	 0000000Fh   
maxTempPrompt  . . . . . . . . .	Byte	 000002A3 _DATA	
maxTemp  . . . . . . . . . . . .	Number	 00000032h   
maxWarmTemp  . . . . . . . . . .	Number	 0000001Eh   
minCoolTemp  . . . . . . . . . .	Number	 00000000h   
minHotTemp . . . . . . . . . . .	Number	 0000001Fh   
minTempPrompt  . . . . . . . . .	Byte	 000002D9 _DATA	
minTemp  . . . . . . . . . . . .	Number	 -0000001Eh   
minWarmTemp  . . . . . . . . . .	Number	 00000010h   
nameDisplay  . . . . . . . . . .	Byte	 000001BF _DATA	
namePrompt . . . . . . . . . . .	Byte	 000001AB _DATA	
numColdDays  . . . . . . . . . .	DWord	 000003F3 _DATA	
numCoolDays  . . . . . . . . . .	DWord	 000003FF _DATA	
numHotDays . . . . . . . . . . .	DWord	 00000407 _DATA	
numOfReadingsPrompt  . . . . . .	Byte	 00000030 _DATA	
numOfTempReadings  . . . . . . .	DWord	 0000042B _DATA	
numWarmDays  . . . . . . . . . .	DWord	 00000403 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
tempPrompt1  . . . . . . . . . .	Byte	 000001CD _DATA	
tempPrompt2  . . . . . . . . . .	Byte	 000001DB _DATA	
tempReadingDiv2Rem . . . . . . .	DWord	 000003FB _DATA	
tempReadingDiv2  . . . . . . . .	DWord	 000003F7 _DATA	
thanksPrompt . . . . . . . . . .	Byte	 00000285 _DATA	
userTemp . . . . . . . . . . . .	DWord	 0000040B _DATA	
usernameByteCount  . . . . . . .	DWord	 000003EF _DATA	
username . . . . . . . . . . . .	Byte	 000003D0 _DATA	
warmPrompt . . . . . . . . . . .	Byte	 00000399 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
